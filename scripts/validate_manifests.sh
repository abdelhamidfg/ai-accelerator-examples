#!/usr/bin/env bash
set -euo pipefail

# DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
DIR="$(pwd)"

function display_help {
  echo "./$(basename "$0") [ -d | --directory DIRECTORY ] [ -q | --quiet ] [ -e | --enforce-all-schemas ] [ -h | --help ] [ --ignore-missing-schemas ] [ --schema-location DIRECTORY ]
Script to validate the manifests generated by Kustomize
Where:
  -d  | --directory DIRECTORY  Base directory containing Kustomize overlays
  -e  | --enforce-all-schemas  Enable enforcement of all schemas
  -h  | --help                 Display this help text
  -sl | --schema-location      Location containing schemas"
}

echo "Checking if kustomize is available..."
if ! command -v "kustomize" >/dev/null; then
    echo "kustomize command not available."
    echo "Checking if oc is available..."
    if ! command -v "oc" >/dev/null; then
        echo "oc command not available."
        exit 1
    fi
    KUSTOMIZE_CMD="oc kustomize"
    echo "Using Openshift Client version:"
    oc version --client | sed 's/^/\t/'
else
    KUSTOMIZE_CMD="kustomize build --enable-helm"
    echo "Using kustomize version: $(kustomize version)"
fi

IGNORE_MISSING_SCHEMAS="--ignore-missing-schemas"
SCHEMA_LOCATION="${DIR}/openshift-json-schema"
KUSTOMIZE_DIRS="${DIR}"

for i in "$@"
do
  case $i in
    -d=* | --directory=* )
      KUSTOMIZE_DIRS="${i#*=}"
      shift
      ;;
    -e | --enforce-all-schemas )
      shift
      IGNORE_MISSING_SCHEMAS=""
      shift
      ;;
    -sl=* | --schema-location=* )
      SCHEMA_LOCATION="${i#*=}"
      shift
      ;;
    -h | --help )
      display_help
      exit 0
      ;;
  esac
done

KUSTOMIZE_DIRS=$(find "${KUSTOMIZE_DIRS}" -type f -name "kustomization.yaml" -exec dirname {} +)

echo
echo "Kustomize directories found:"
echo "${KUSTOMIZE_DIRS}"
echo

for i in ${KUSTOMIZE_DIRS}; do

  if [[ ${i} == *"./bootstrap"* ]]; then
    echo
    echo "Skipping validating for bootstrap kustomization $i"
    echo
    continue
  fi

  echo "Validating $i"
  echo

  KUSTOMIZE_BUILD_OUTPUT=$(${KUSTOMIZE_CMD} "$i" --enable-helm)

  build_response=$?

  if [ $build_response -ne 0 ]; then
    echo "Error building kustomization from $i"
    exit 1
  fi

#  echo "$KUSTOMIZE_BUILD_OUTPUT" | kubeval ${IGNORE_MISSING_SCHEMAS} --schema-location="file://${SCHEMA_LOCATION}" --force-color

#  validation_response=$?

#  if [ $validation_response -ne 0 ]; then
#    echo "Error validating $i"
#    exit 1
#  fi
done

echo
echo "Kustomize manifests successfully validated!"
